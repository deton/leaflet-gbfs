this.L=this.L||{},this.L.GBFS=function(n){const t="undefined"!=typeof Symbol?Symbol.iterator||(Symbol.iterator=Symbol("Symbol.iterator")):"@@iterator";function e(n,t,i){if(!n.s){if(i instanceof o){if(!i.s)return void(i.o=e.bind(null,n,t));1&t&&(t=i.s),i=i.v}if(i&&i.then)return void i.then(e.bind(null,n,t),e.bind(null,n,2));n.s=t,n.v=i;const r=n.o;r&&r(n)}}const o=function(){function n(){}return n.prototype.then=function(t,o){const i=new n,r=this.s;if(r){const n=1&r?t:o;if(n){try{e(i,1,n(this.v))}catch(n){e(i,2,n)}return i}return this}return this.o=function(n){try{const r=n.v;1&n.s?e(i,1,t?t(r):r):o?e(i,1,o(r)):e(i,2,r)}catch(n){e(i,2,n)}},i},n}();function i(n){return n instanceof o&&1&n.s}const r=new URL("./images/bike_icon.png",document.currentScript.src);function s(n,r,s){if("function"==typeof n[t]){var a,u,c,f=n[t]();if(function n(t){try{for(;!((a=f.next()).done||s&&s());)if((t=r(a.value))&&t.then){if(!i(t))return void t.then(n,c||(c=e.bind(null,u=new o,2)));t=t.v}u?e(u,1,t):u=t}catch(n){e(u||(u=new o),2,n)}}(),f.return){var l=function(n){try{a.done||f.return()}catch(n){}return n};if(u&&u.then)return u.then(l,function(n){throw l(n)});l()}return u}if(!("length"in n))throw new TypeError("Object is not iterable");for(var h=[],d=0;d<n.length;d++)h.push(n[d]);return function(n,t,r){var s,a,u=-1;return function c(f){try{for(;++u<n.length&&(!r||!r());)if((f=t(u))&&f.then){if(!i(f))return void f.then(c,a||(a=e.bind(null,s=new o,2)));f=f.v}s?e(s,1,f):s=f}catch(n){e(s||(s=new o),2,n)}}(),s}(h,function(n){return r(h[n])},s)}function a(n,t){try{var e=n()}catch(n){return t(n)}return e&&e.then?e.then(void 0,t):e}return n.Layer.extend({options:{gbfsURL:"",gbfsFiles:null,language:null,start:!0,interval:6e4,onlyRunWhenAdded:!1,bikeMarkerColor:"white",bikeMarkerBgColor:"silver",stationMarkerBgColor:"#8C2BF2",showStationPopup:!0,showBikePopup:!0},initialize(t){n.setOptions(this,t),this.container=new n.GeoJSON(null,t),this.updating=!1,this.options.start&&!this.options.onlyRunWhenAdded&&this.start()},start:function(){try{let t;const e=this;function n(n){if(t)return n;const o=a(function(){return Promise.resolve(fetch(e.options.gbfsURL)).then(function(n){return Promise.resolve(n.json()).then(function(n){if(e.options.language){if(!Object.prototype.hasOwnProperty.call(n.data,e.options.language))throw new Error(`defined language (${e.options.language}) missing in gbfs file`)}else{const t=Object.keys(n.data);if(0===t.length)throw new Error("GBFS has no languages defined");e.options.language=t[0]}const t=n.data[e.options.language].feeds,o=t.find(n=>"system_information"===n.name);return Promise.resolve(fetch(o.url)).then(function(n){return Promise.resolve(n.json()).then(function(n){e.systemInformation=n;const o=t.find(n=>"station_information"===n.name),i=t.find(n=>"station_status"===n.name),r=t.find(n=>"free_bike_status"===n.name);e.feeds={stationInformation:o,stationStatus:i,freeBikeStatus:r},e.stations={},!e.timer&&e.options.interval>0&&(e.timer=setInterval(()=>e.update(),e.options.interval),e.update())})})})})},function(n){console.warn(n),e.fire("error",{error:n})});return o&&o.then?o.then(function(n){return e}):e}if(e.feeds)return Promise.resolve(e);const o=function(){if(e.options.gbfsFiles){function n(){return e.update(),t=1,e}e.stations={},e.feeds={};const o=s(e.options.gbfsFiles,function(n){const t=function(){if("station_information.json"===n.name)e.feeds.stationInformation=n;else{const t=function(){if("station_status.json"===n.name)e.feeds.stationStatus=n;else{const t=function(){if("system_information.json"===n.name)return Promise.resolve(n.text()).then(function(n){e.systemInformation=JSON.parse(n)})}();if(t&&t.then)return t.then(function(){})}}();if(t&&t.then)return t.then(function(){})}}();if(t&&t.then)return t.then(function(){})});return o&&o.then?o.then(n):n()}}();return Promise.resolve(o&&o.then?o.then(n):n(o))}catch(n){return Promise.reject(n)}},stop(){return this.timer&&(clearTimeout(this.timer),delete this.timer),this},isRunning(){return void 0!==this.timer},isUpdating(){return this.updating},update:function(){try{const e=this;function t(){return e.updating=!1,e}if(void 0===e.feeds)return Promise.resolve(e);const o=a(function(){function t(){function t(){function t(){function t(){const t=new n.Icon({iconSize:[32,32],popupAnchor:[0,-20],iconUrl:r});void 0!==a&&a.data.bikes.forEach(o=>{const i=new n.LatLng(o.lat,o.lon),r=new n.Marker(i,{icon:t});e.options.showBikePopup&&r.bindPopup("Bike available"),r.on("click",n=>e.fire("bikeClick",{event:n,bike:o})),r.addTo(e.container)});const s={stationStatus:o};void 0!==i&&(s.stations=i),void 0!==a&&(s.freeBikeStatus=a),void 0!==u&&(s.vehicleTypes=u),e.fire("data",s)}e.container.clearLayers();const c=s(o.data.stations,function(t){const o=function(){if(t.is_installed){function o(){const o=new n.DivIcon({html:e.getStationIconHtml(t.num_bikes_available,t.num_docks_available),bgPos:[16,16],iconSize:[32,32],popupAnchor:[0,-21],className:"station-icon"}),i=new n.LatLng(r.lat,r.lon),s=new n.Marker(i,{icon:o});e.options.showStationPopup&&s.bindPopup(`<b>${r.name}</b><br>Available bikes: <b>${t.num_bikes_available}</b>`),s.on("click",n=>e.fire("stationClick",{event:n,station:r,status:t})),s.addTo(e.container)}let r=e.stations[t.station_id];const s=function(){if(!r){function n(){i.data.stations.forEach(n=>{e.stations[n.station_id]=n}),r=e.stations[t.station_id]}const o="string"==typeof e.feeds.stationInformation.url?Promise.resolve(fetch(e.feeds.stationInformation.url)).then(function(n){return Promise.resolve(n.json()).then(function(n){i=n})}):Promise.resolve(e.feeds.stationInformation.text()).then(function(n){i=JSON.parse(n)});return o&&o.then?o.then(n):n()}}();return s&&s.then?s.then(o):o()}}();if(o&&o.then)return o.then(function(){})});return c&&c.then?c.then(t):t()}let u;const c=function(){if(void 0!==e.feeds.vehicleTypes)return Promise.resolve(fetch(e.feeds.vehicleTypes.url)).then(function(n){return Promise.resolve(n.json()).then(function(n){u=n})})}();return c&&c.then?c.then(t):t()}let a;const u=function(){if(void 0!==e.feeds.freeBikeStatus)return Promise.resolve(fetch(e.feeds.freeBikeStatus.url)).then(function(n){return Promise.resolve(n.json()).then(function(n){a=n})})}();return u&&u.then?u.then(t):t()}let o,i;e.updating=!0;const a="string"==typeof e.feeds.stationStatus.url?Promise.resolve(fetch(e.feeds.stationStatus.url)).then(function(n){return Promise.resolve(n.json()).then(function(n){o=n})}):Promise.resolve(e.feeds.stationStatus.text()).then(function(n){o=JSON.parse(n)});return a&&a.then?a.then(t):t()},function(n){e.updating=!1,console.warn(n),e.fire("error",{error:n})});return Promise.resolve(o&&o.then?o.then(t):t())}catch(n){return Promise.reject(n)}},getBounds(){if(this.container.getBounds)return this.container.getBounds();throw new Error("Container has no getBounds method")},onAdd(n){n.addLayer(this.container),this.options.start&&this.start()},onRemove(n){this.options.onlyRunWhenAdded&&this.stop(),n.removeLayer(this.container)},getStationIconHtml(n,t){let e=`background: ${this.options.stationMarkerBgColor};`;0===n&&(e=`background: color-mix(in srgb, ${this.options.stationMarkerBgColor} 50%, transparent);`);const o=n/(n+t)*360;let i=`\n      background: ${this.options.bikeMarkerColor};\n      background-image:\n        linear-gradient(${90+o}deg, transparent 50%, ${this.options.bikeMarkerBgColor} 50%),\n        linear-gradient(90deg, ${this.options.bikeMarkerBgColor} 50%, transparent 50%);\n    `;return o>180&&(i=`\n        background: ${this.options.bikeMarkerColor};\n        background-image:\n          linear-gradient(${o-90}deg, transparent 50%, ${this.options.bikeMarkerColor} 50%),\n          linear-gradient(90deg, ${this.options.bikeMarkerBgColor} 50%, transparent 50%);\n      `),`\n      <div class="station-icon-ring" style="${i}">\n        <div class="station-icon-inner" style="${e}">${n}</div>\n      </div>\n    `}})}(L);
//# sourceMappingURL=L.GBFS.js.map
