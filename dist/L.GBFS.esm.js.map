{"version":3,"file":"L.GBFS.esm.js","sources":["../src/L.GBFS.js"],"sourcesContent":["import './L.GBFS.css';\n\nimport {\n  Layer, GeoJSON, Marker, Icon, DivIcon, LatLng, setOptions,\n} from 'leaflet';\n\n// const iconUrl = require('./images/bike_icon.png');\nconst iconUrl = new URL('./images/bike_icon.png', document.currentScript.src);\n\nconst GBFS = Layer.extend({\n  options: {\n    gbfsURL: '',\n    gbfsFiles: null,\n    language: null,\n    start: true,\n    interval: 60 * 1000,\n    onlyRunWhenAdded: false,\n    bikeMarkerColor: 'white',\n    bikeMarkerBgColor: 'silver',\n    stationMarkerBgColor: '#8C2BF2',\n    showStationPopup: true,\n    showBikePopup: true,\n  },\n\n  initialize(options) {\n    setOptions(this, options);\n    this.container = new GeoJSON(null, options);\n    this.updating = false;\n\n    if (this.options.start && !this.options.onlyRunWhenAdded) {\n      this.start();\n    }\n  },\n\n  async start() {\n    if (this.feeds) { // already started\n      return this;\n    }\n    if (this.options.gbfsFiles) {\n      this.stations = {};\n      this.feeds = {};\n      for (const f of this.options.gbfsFiles) {\n        if (f.name === 'station_information.json') {\n          this.feeds.stationInformation = f;\n        } else if (f.name === 'station_status.json') {\n          this.feeds.stationStatus = f;\n        } else if (f.name === 'system_information.json') {\n          // eslint-disable-next-line no-await-in-loop\n          const systemInfoText = await f.text();\n          this.systemInformation = JSON.parse(systemInfoText);\n        }\n      }\n      this.update();\n      return this;\n    }\n    try {\n      const gbfsResponse = await fetch(this.options.gbfsURL);\n      const gbfs = await gbfsResponse.json();\n      if (this.options.language) {\n        if (!Object.prototype.hasOwnProperty.call(gbfs.data, this.options.language)) {\n          throw new Error(`defined language (${this.options.language}) missing in gbfs file`);\n        }\n      } else {\n        const languages = Object.keys(gbfs.data);\n        if (languages.length === 0) {\n          throw new Error('GBFS has no languages defined');\n        } else {\n          this.options.language = languages[0];\n        }\n      }\n\n      const feeds = gbfs.data[this.options.language].feeds;\n      const systemInformation = feeds.find((el) => el.name === 'system_information');\n      const systemInfoResponse = await fetch(systemInformation.url);\n      this.systemInformation = await systemInfoResponse.json();\n\n      const stationInformation = feeds.find((el) => el.name === 'station_information');\n      const stationStatus = feeds.find((el) => el.name === 'station_status');\n      const freeBikeStatus = feeds.find((el) => el.name === 'free_bike_status');\n      // const vehicleTypes = feeds.find((el) => el.name === 'vehicle_types');\n\n      this.feeds = {\n        stationInformation, stationStatus, freeBikeStatus, // vehicleTypes,\n      };\n      this.stations = {};\n\n      if (!this.timer && this.options.interval > 0) {\n        this.timer = setInterval(() => this.update(), this.options.interval);\n        this.update();\n      }\n    } catch (err) {\n      console.warn(err);\n      this.fire('error', { error: err });\n    }\n\n    return this;\n  },\n\n  stop() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n      delete this.timer;\n    }\n\n    return this;\n  },\n\n  isRunning() {\n    return this.timer !== undefined;\n  },\n\n  isUpdating() {\n    return this.updating;\n  },\n\n  async update() {\n    if (typeof this.feeds === 'undefined') {\n      return this;\n    }\n    try {\n      this.updating = true;\n      let stationStatus;\n      let stations;\n      if (typeof this.feeds.stationStatus.url === 'string') {\n        const stationStatusResponse = await fetch(this.feeds.stationStatus.url);\n        stationStatus = await stationStatusResponse.json();\n      } else {\n        const stationStatusText = await this.feeds.stationStatus.text();\n        stationStatus = JSON.parse(stationStatusText);\n      }\n      let freeBikeStatus;\n      if (typeof this.feeds.freeBikeStatus !== 'undefined') {\n        const freeBikeStatusResponse = await fetch(this.feeds.freeBikeStatus.url);\n        freeBikeStatus = await freeBikeStatusResponse.json();\n      }\n      let vehicleTypes;\n      if (typeof this.feeds.vehicleTypes !== 'undefined') {\n        const vehicleTypesResponse = await fetch(this.feeds.vehicleTypes.url);\n        vehicleTypes = await vehicleTypesResponse.json();\n      }\n\n      this.container.clearLayers();\n\n      for (const status of stationStatus.data.stations) {\n        if (status.is_installed) {\n          let station = this.stations[status.station_id];\n          if (!station) {\n            /* eslint-disable no-await-in-loop */\n            if (typeof this.feeds.stationInformation.url === 'string') {\n              const stationInformationResponse = await fetch(this.feeds.stationInformation.url);\n              stations = await stationInformationResponse.json();\n            } else {\n              const stationInformationText = await this.feeds.stationInformation.text();\n              stations = JSON.parse(stationInformationText);\n            }\n            /* eslint-enable */\n            stations.data.stations.forEach((st) => {\n              this.stations[st.station_id] = st;\n            });\n            station = this.stations[status.station_id];\n          }\n          const icon = new DivIcon({\n            html: this.getStationIconHtml(status.num_bikes_available, status.num_docks_available),\n            bgPos: [16, 16],\n            iconSize: [32, 32],\n            popupAnchor: [0, -21],\n            className: 'station-icon',\n          });\n          const point = new LatLng(station.lat, station.lon);\n          const marker = new Marker(point, {\n            icon,\n          });\n          if (this.options.showStationPopup) {\n            marker.bindPopup(`<b>${station.name}</b><br>Available bikes: <b>${status.num_bikes_available}</b>`);\n          }\n          marker.on('click', (e) => this.fire('stationClick', { event: e, station, status }));\n          marker.addTo(this.container);\n        }\n      }\n\n      const icon = new Icon({\n        iconSize: [32, 32],\n        popupAnchor: [0, -20],\n        iconUrl,\n      });\n\n      if (typeof freeBikeStatus !== 'undefined') {\n        freeBikeStatus.data.bikes.forEach((bike) => {\n          const point = new LatLng(bike.lat, bike.lon);\n          const marker = new Marker(point, {\n            icon,\n          });\n          if (this.options.showBikePopup) {\n            marker.bindPopup('Bike available');\n          }\n          marker.on('click', (e) => this.fire('bikeClick', { event: e, bike }));\n          marker.addTo(this.container);\n        });\n      }\n\n      const dataUpdate = { stationStatus };\n      if (typeof stations !== 'undefined') dataUpdate.stations = stations;\n      if (typeof freeBikeStatus !== 'undefined') dataUpdate.freeBikeStatus = freeBikeStatus;\n      if (typeof vehicleTypes !== 'undefined') dataUpdate.vehicleTypes = vehicleTypes;\n      this.fire('data', dataUpdate);\n    } catch (err) {\n      this.updating = false;\n      console.warn(err);\n      this.fire('error', { error: err });\n    }\n\n    this.updating = false;\n    return this;\n  },\n\n  getBounds() {\n    if (this.container.getBounds) {\n      return this.container.getBounds();\n    }\n\n    throw new Error('Container has no getBounds method');\n  },\n\n  onAdd(map) {\n    map.addLayer(this.container);\n    if (this.options.start) {\n      this.start();\n    }\n  },\n\n  onRemove(map) {\n    if (this.options.onlyRunWhenAdded) {\n      this.stop();\n    }\n\n    map.removeLayer(this.container);\n  },\n\n  getStationIconHtml(bikes, docks) {\n    let stationCss = `background: ${this.options.stationMarkerBgColor};`;\n    if (bikes === 0) {\n      stationCss = `background: color-mix(in srgb, ${this.options.stationMarkerBgColor} 50%, transparent);`;\n    }\n    const degree = (bikes / (bikes + docks)) * 360;\n    let ringCss = `\n      background: ${this.options.bikeMarkerColor};\n      background-image:\n        linear-gradient(${90 + degree}deg, transparent 50%, ${this.options.bikeMarkerBgColor} 50%),\n        linear-gradient(90deg, ${this.options.bikeMarkerBgColor} 50%, transparent 50%);\n    `;\n\n    if (degree > 180) {\n      ringCss = `\n        background: ${this.options.bikeMarkerColor};\n        background-image:\n          linear-gradient(${degree - 90}deg, transparent 50%, ${this.options.bikeMarkerColor} 50%),\n          linear-gradient(90deg, ${this.options.bikeMarkerBgColor} 50%, transparent 50%);\n      `;\n    }\n    return `\n      <div class=\"station-icon-ring\" style=\"${ringCss}\">\n        <div class=\"station-icon-inner\" style=\"${stationCss}\">${bikes}</div>\n      </div>\n    `;\n  },\n});\n\nexport default GBFS;\n"],"names":["iconUrl","URL","document","currentScript","src","GBFS","Layer","extend","options","gbfsURL","gbfsFiles","language","start","interval","onlyRunWhenAdded","bikeMarkerColor","bikeMarkerBgColor","stationMarkerBgColor","showStationPopup","showBikePopup","initialize","setOptions","this","container","GeoJSON","updating","[object Object]","feeds","stations","f","name","stationInformation","stationStatus","systemInfoText","text","systemInformation","JSON","parse","update","gbfsResponse","fetch","gbfs","json","Object","prototype","hasOwnProperty","call","data","Error","languages","keys","length","find","el","systemInfoResponse","url","freeBikeStatus","timer","setInterval","err","console","warn","fire","error","stop","clearTimeout","isRunning","undefined","isUpdating","vehicleTypes","stationStatusResponse","stationStatusText","freeBikeStatusResponse","vehicleTypesResponse","clearLayers","status","is_installed","station","station_id","stationInformationResponse","stationInformationText","forEach","st","icon","DivIcon","html","getStationIconHtml","num_bikes_available","num_docks_available","bgPos","iconSize","popupAnchor","className","point","LatLng","lat","lon","marker","Marker","bindPopup","on","e","event","addTo","Icon","bikes","bike","dataUpdate","getBounds","onAdd","map","addLayer","onRemove","removeLayer","docks","stationCss","degree","ringCss"],"mappings":"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"}