{"version":3,"file":"L.GBFS.esm.js","sources":["../src/L.GBFS.js"],"sourcesContent":["import './L.GBFS.css';\n\nimport {\n  Layer, GeoJSON, Marker, Icon, DivIcon, LatLng, setOptions,\n} from 'leaflet';\n\n// const iconUrl = require('./images/bike_icon.png');\nconst iconUrl = new URL('./images/bike_icon.png', document.currentScript.src);\n\nconst GBFS = Layer.extend({\n  options: {\n    gbfsURL: '',\n    language: null,\n    start: true,\n    interval: 60 * 1000,\n    onlyRunWhenAdded: false,\n    bikeMarkerColor: 'white',\n    bikeMarkerBgColor: 'silver',\n    stationMarkerBgColor: '#8C2BF2',\n    showStationPopup: true,\n    showBikePopup: true,\n  },\n\n  initialize(options) {\n    setOptions(this, options);\n    this.container = new GeoJSON(null, options);\n    this.updating = false;\n\n    if (this.options.start && !this.options.onlyRunWhenAdded) {\n      this.start();\n    }\n  },\n\n  async start() {\n    if (this.feeds) { // already started\n      return this;\n    }\n    try {\n      const gbfsResponse = await fetch(this.options.gbfsURL);\n      const gbfs = await gbfsResponse.json();\n      if (this.options.language) {\n        if (!Object.prototype.hasOwnProperty.call(gbfs.data, this.options.language)) {\n          throw new Error(`defined language (${this.options.language}) missing in gbfs file`);\n        }\n      } else {\n        const languages = Object.keys(gbfs.data);\n        if (languages.length === 0) {\n          throw new Error('GBFS has no languages defined');\n        } else {\n          this.options.language = languages[0];\n        }\n      }\n\n      const feeds = gbfs.data[this.options.language].feeds;\n      const systemInformation = feeds.find((el) => el.name === 'system_information');\n      const systemInfoResponse = await fetch(systemInformation.url);\n      this.systemInformation = await systemInfoResponse.json();\n\n      const stationInformation = feeds.find((el) => el.name === 'station_information');\n      const stationStatus = feeds.find((el) => el.name === 'station_status');\n      const freeBikeStatus = feeds.find((el) => el.name === 'free_bike_status');\n      // const vehicleTypes = feeds.find((el) => el.name === 'vehicle_types');\n\n      this.feeds = {\n        stationInformation, stationStatus, freeBikeStatus, // vehicleTypes,\n      };\n      this.stations = {};\n\n      if (!this.timer) {\n        this.timer = setInterval(() => this.update(), this.options.interval);\n        this.update();\n      }\n    } catch (err) {\n      console.warn(err);\n      this.fire('error', { error: err });\n    }\n\n    return this;\n  },\n\n  stop() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n      delete this.timer;\n    }\n\n    return this;\n  },\n\n  isRunning() {\n    return this.timer !== undefined;\n  },\n\n  isUpdating() {\n    return this.updating;\n  },\n\n  async update() {\n    if (typeof this.feeds === 'undefined') {\n      return this;\n    }\n    try {\n      this.updating = true;\n      let stations;\n      const stationStatusResponse = await fetch(this.feeds.stationStatus.url);\n      const stationStatus = await stationStatusResponse.json();\n      let freeBikeStatus;\n      if (typeof this.feeds.freeBikeStatus !== 'undefined') {\n        const freeBikeStatusResponse = await fetch(this.feeds.freeBikeStatus.url);\n        freeBikeStatus = await freeBikeStatusResponse.json();\n      }\n      let vehicleTypes;\n      if (typeof this.feeds.vehicleTypes !== 'undefined') {\n        const vehicleTypesResponse = await fetch(this.feeds.vehicleTypes.url);\n        vehicleTypes = await vehicleTypesResponse.json();\n      }\n\n      this.container.clearLayers();\n\n      for (const status of stationStatus.data.stations) {\n        if (status.is_installed) {\n          let station = this.stations[status.station_id];\n          if (!station) {\n            /* eslint-disable no-await-in-loop */\n            const stationInformationResponse = await fetch(this.feeds.stationInformation.url);\n            stations = await stationInformationResponse.json();\n            /* eslint-enable */\n            stations.data.stations.forEach((st) => {\n              this.stations[st.station_id] = st;\n            });\n            station = this.stations[status.station_id];\n          }\n          const icon = new DivIcon({\n            html: this.getStationIconHtml(status.num_bikes_available, status.num_docks_available),\n            bgPos: [16, 16],\n            iconSize: [32, 32],\n            popupAnchor: [0, -21],\n            className: 'station-icon',\n          });\n          const point = new LatLng(station.lat, station.lon);\n          const marker = new Marker(point, {\n            icon,\n          });\n          if (this.options.showStationPopup) {\n            marker.bindPopup(`<b>${station.name}</b><br>Available bikes: <b>${status.num_bikes_available}</b>`);\n          }\n          marker.on('click', (e) => this.fire('stationClick', { event: e, station, status }));\n          marker.addTo(this.container);\n        }\n      }\n\n      const icon = new Icon({\n        iconSize: [32, 32],\n        popupAnchor: [0, -20],\n        iconUrl,\n      });\n\n      if (typeof freeBikeStatus !== 'undefined') {\n        freeBikeStatus.data.bikes.forEach((bike) => {\n          const point = new LatLng(bike.lat, bike.lon);\n          const marker = new Marker(point, {\n            icon,\n          });\n          if (this.options.showBikePopup) {\n            marker.bindPopup('Bike available');\n          }\n          marker.on('click', (e) => this.fire('bikeClick', { event: e, bike }));\n          marker.addTo(this.container);\n        });\n      }\n\n      const dataUpdate = { stationStatus };\n      if (typeof stations !== 'undefined') dataUpdate.stations = stations;\n      if (typeof freeBikeStatus !== 'undefined') dataUpdate.freeBikeStatus = freeBikeStatus;\n      if (typeof vehicleTypes !== 'undefined') dataUpdate.vehicleTypes = vehicleTypes;\n      this.fire('data', dataUpdate);\n    } catch (err) {\n      this.updating = false;\n      console.warn(err);\n      this.fire('error', { error: err });\n    }\n\n    this.updating = false;\n    return this;\n  },\n\n  getBounds() {\n    if (this.container.getBounds) {\n      return this.container.getBounds();\n    }\n\n    throw new Error('Container has no getBounds method');\n  },\n\n  onAdd(map) {\n    map.addLayer(this.container);\n    if (this.options.start) {\n      this.start();\n    }\n  },\n\n  onRemove(map) {\n    if (this.options.onlyRunWhenAdded) {\n      this.stop();\n    }\n\n    map.removeLayer(this.container);\n  },\n\n  getStationIconHtml(bikes, docks) {\n    let stationCss = `background: ${this.options.stationMarkerBgColor};`;\n    if (bikes === 0) {\n      stationCss = `background: color-mix(in srgb, ${this.options.stationMarkerBgColor} 50%, transparent);`;\n    }\n    const degree = (bikes / (bikes + docks)) * 360;\n    let ringCss = `\n      background: ${this.options.bikeMarkerColor};\n      background-image:\n        linear-gradient(${90 + degree}deg, transparent 50%, ${this.options.bikeMarkerBgColor} 50%),\n        linear-gradient(90deg, ${this.options.bikeMarkerBgColor} 50%, transparent 50%);\n    `;\n\n    if (degree > 180) {\n      ringCss = `\n        background: ${this.options.bikeMarkerColor};\n        background-image:\n          linear-gradient(${degree - 90}deg, transparent 50%, ${this.options.bikeMarkerColor} 50%),\n          linear-gradient(90deg, ${this.options.bikeMarkerBgColor} 50%, transparent 50%);\n      `;\n    }\n    return `\n      <div class=\"station-icon-ring\" style=\"${ringCss}\">\n        <div class=\"station-icon-inner\" style=\"${stationCss}\">${bikes}</div>\n      </div>\n    `;\n  },\n});\n\nexport default GBFS;\n"],"names":["iconUrl","URL","document","currentScript","src","GBFS","Layer","extend","options","gbfsURL","language","start","interval","onlyRunWhenAdded","bikeMarkerColor","bikeMarkerBgColor","stationMarkerBgColor","showStationPopup","showBikePopup","initialize","setOptions","this","container","GeoJSON","updating","[object Object]","feeds","gbfsResponse","fetch","gbfs","json","Object","prototype","hasOwnProperty","call","data","Error","languages","keys","length","systemInformation","find","el","name","systemInfoResponse","url","stationInformation","stationStatus","freeBikeStatus","stations","timer","setInterval","update","err","console","warn","fire","error","stop","clearTimeout","isRunning","undefined","isUpdating","stationStatusResponse","vehicleTypes","freeBikeStatusResponse","vehicleTypesResponse","clearLayers","status","is_installed","station","station_id","stationInformationResponse","forEach","st","icon","DivIcon","html","getStationIconHtml","num_bikes_available","num_docks_available","bgPos","iconSize","popupAnchor","className","point","LatLng","lat","lon","marker","Marker","bindPopup","on","e","event","addTo","Icon","bikes","bike","dataUpdate","getBounds","onAdd","map","addLayer","onRemove","removeLayer","docks","stationCss","degree","ringCss"],"mappings":"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"}